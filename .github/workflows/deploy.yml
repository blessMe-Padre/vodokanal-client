name: Deploy to VPS

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: |
          npm ci

      - name: Build frontend
        run: |
          npm run build || echo "Skip build for dev mode"

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 109.70.24.185
          username: root
          password: ${{ secrets.VPS_PASSWORD }}
          port: 22
          script: |
            apt update && apt upgrade -y
            if ! command -v node &> /dev/null; then
              curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
              apt-get install -y nodejs
            fi
            if ! command -v nginx &> /dev/null; then
              apt install nginx -y
              systemctl start nginx
              systemctl enable nginx
            fi
            mkdir -p /root/www/nakhodka-vodokanal.ru/vodokanal-front
            cd /root/www/nakhodka-vodokanal.ru/vodokanal-front

      - name: Copy files to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: 109.70.24.185
          username: root
          password: ${{ secrets.VPS_PASSWORD }}
          port: 22
          source: "."
          target: "/root/www/nakhodka-vodokanal.ru/vodokanal-front"
          strip_components: 0

      - name: Setup and start application
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 109.70.24.185
          username: root
          password: ${{ secrets.VPS_PASSWORD }}
          port: 22
          script: |
            cd /root/www/nakhodka-vodokanal.ru/vodokanal-front
            npm ci
            if [ ! -f .env ]; then
              cat > .env << EOF
              NODE_ENV=development
              PORT=3001
              HOST=0.0.0.0
              EOF
            fi
            if ! command -v pm2 &> /dev/null; then
            npm install -g pm2
            fi
            # Останавливаем и удаляем старый процесс
            pm2 stop next-dev || true
            pm2 delete next-dev || true
            # Запускаем через ecosystem.config.js
            pm2 start ecosystem.config.js --only next-dev
            pm2 save
            pm2 startup 
            echo "Deployment completed successfully!"
            pm2 status
